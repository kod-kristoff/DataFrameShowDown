name: CI

permissions:
  contents: read

on: [pull_request, push]

jobs:
  build:
    name: Run in mode ${{ matrix.task.mode }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
        task: 
          - build: cargo build
            run: cargo run
            mode: Debug
          - build: cargo build --release
            run: cargo run --release
            mode: Release
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          components: rustfmt, clippy
      
      - name: Load cached data
        id: cached-data
        uses: actions/cache@v3
        with:
          path: data
          key: data-${{ runner.os }}-${{ hashFiles('**/download-data.sh') }}

      - name: Install dependencies
        if: steps.cached-data.outputs.cache-hit != 'true'
        run: ./download-data.sh

      - name: Build (${{ matrix.task.mode }})
        run: |
          cd RustDataFusion
          ${{ matrix.task.build }}

      - name: Run (${{ matrix.task.mode }})
        run: |
          cd RustDataFusion
          ${{ matrix.task.run }}
